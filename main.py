import time
from displaystates import Home, DisplayOff, MessageViewer, SetAlarm, aliases
import errno
from config import display
import json
from components import Alarm, Switch, Motor
import movements
import webserver
import motd_parser
from lib.neotimer import Neotimer
from lib.ntptime import settime
import lib.connect as connect
import displaystates.mode as mode
import socket
from machine import RTC  # type: ignore
import framebuf  # type: ignore
import config
import _thread
booticon = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0, 0xc0, 0x40, 0xc0, 0xc0,
                      0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xc0,
                      0xc0, 0x40, 0xc0, 0xc0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x80, 0xe0, 0xfc, 0x7e, 0x7e, 0x7b, 0x77, 0x6f, 0x5f, 0x3f, 0x80, 0x3f, 0x5f,
                      0x6f, 0x77, 0x7b, 0x7f, 0x7e, 0xfc, 0xe0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x00, 0xfe,
                      0xfe, 0x00, 0x00, 0x00, 0x00, 0xe0, 0xf8, 0x1e, 0x06, 0x06, 0x1e, 0xf8, 0xe0, 0x00, 0x00, 0xe0,
                      0xf8, 0x1e, 0x06, 0x06, 0x1e, 0xf8, 0xe0, 0x00, 0x00, 0xf8, 0xfe, 0x06, 0x06, 0x06, 0xfe, 0xfe,
                      0x00, 0x00, 0x00, 0x60, 0x60, 0x60, 0x60, 0x60, 0xf8, 0x7c, 0x7e, 0x7e, 0x7b, 0x77, 0x6f, 0x5f,
                      0x3f, 0x80, 0x3f, 0x5f, 0x6f, 0x77, 0x7b, 0x7f, 0x7e, 0xfe, 0xf8, 0x18, 0x18, 0x18, 0x18, 0x18,
                      0x18, 0x78, 0x78, 0xe0, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xc0,
                      0xf0, 0x3c, 0x3c, 0x0f, 0x0f, 0x0f, 0x3f, 0x3f, 0x6f, 0xf7, 0xfb, 0xfd, 0xfe, 0x00, 0xfe, 0xfd,
                      0xfb, 0xf7, 0x6f, 0x7f, 0x3f, 0x0f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x60, 0x7f,
                      0x7f, 0x60, 0x60, 0x60, 0x00, 0x0f, 0x1f, 0x70, 0x60, 0x60, 0x70, 0x1f, 0x0f, 0x00, 0x00, 0x0f,
                      0x1f, 0x70, 0x60, 0x60, 0x70, 0x1f, 0x0f, 0x00, 0x00, 0x1c, 0x7f, 0x63, 0x63, 0x63, 0x7f, 0x7f,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x0f, 0x3f, 0x3f, 0x6f, 0xf7, 0xfb, 0xfd,
                      0xfe, 0x00, 0xfe, 0xfd, 0xfb, 0xf7, 0x6f, 0x7f, 0x3f, 0x0f, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0xff, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x80, 0x80, 0xe0, 0x70, 0x70, 0x1c, 0x1c, 0x0c, 0x0f, 0x0f, 0x03, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
                      0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0x7f, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80,
                      0xe0, 0x60, 0x60, 0x78, 0x18, 0x18, 0x18, 0x1e, 0x1e, 0x06, 0x06, 0x07, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0xc0, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xf0, 0xf0,
                      0x3c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c,
                      0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0e, 0x0e, 0x02, 0x02, 0x02, 0x02, 0x03, 0x03, 0x01, 0x01,
                      0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0xff, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0x00, 0x00, 0xf0, 0x3f, 0x3f, 0x03, 0x03, 0x03,
                      0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x03, 0x0f, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c, 0x0c,
                      0x3c, 0x30, 0x30, 0x30, 0x30, 0xf0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0, 0xc0,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0xf0, 0x3c, 0x3c, 0x0f, 0x03, 0x03, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
                      0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,
                      0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
icon = framebuf.FrameBuffer(booticon, 128, 64, framebuf.MONO_VLSB)
config.display.draw_sprite(icon, x=0, y=0, w=128, h=64)
config.display.present()


# TODO: switch to urequests

def http_get(host, port, path):
    addr = socket.getaddrinfo(host, port)[0][-1]
    s = socket.socket()
    s.settimeout(15)
    try:
        s.connect(addr)
        # HTTP/1.0 + Host header
        s.send(b"GET %s HTTP/1.0\r\nHost: %s\r\n\r\n" %
               (path.encode(), host.encode()))
        data = b""
        while True:
            chunk = s.recv(128)
            if not chunk:
                break
            data += chunk
        header_end = data.find(b"\r\n\r\n")
        if header_end != -1:
            return data[header_end + 4:].decode()
        return data.decode()
    finally:
        s.close()


try:
    with open(f'alarm.json', 'r') as f:
        print(f.read())
    connect.do_connect()

    with open('motds.json', 'r') as f:
        motds = json.load(f)
    try:
        cached_motds = http_get(
            config.server_ip, config.server_port, "/fetch_cache")
        cached_motds = json.loads(cached_motds)
        print("Found cached motds!", cached_motds)
        highest_id = motds[-1]["id"]
        new_id = highest_id + 1
        for motd in cached_motds:
            motd['id'] = new_id
            new_id += 1
            motds.append(motd)
        with open('motds.json', 'w') as f:
            json.dump(motds, f)
        http_get(config.server_ip, config.server_port, "/clear_cache")
    except OSError as e:
        if e.errno == errno.ETIMEDOUT:
            print("timed out while getting cached motds")
        else:
            raise
    try:
        new_alarm_msg = http_get(
            config.server_ip, config.server_port, "/fetch_alarm_msg")
        print(new_alarm_msg)
        if new_alarm_msg != '' and new_alarm_msg != '404 Not Found':
            print("got new alarm message")
            with open(f'alarm.json', 'r') as f:
                # print(f.read())
                data = json.load(f)
            data['alarm_message'] = new_alarm_msg

            with open(f'alarm.json', 'w') as f:
                json.dump(data, f)

            http_get(config.server_ip, config.server_port, "/clear_alarm_msg")
        if new_alarm_msg == 'random':
            with open('alarm.json', 'r') as f:
                data = json.load(f)

            data['alarm_message'] = motd_parser.select_random_motd(motds)[
                'motd']

            with open('alarm.json', 'w') as f:
                json.dump([data], f)
    except OSError as e:
        if e.errno == errno.ETIMEDOUT:
            print("timed out")
        else:
            raise

    s, clients = webserver.web_setup()
    rtc = RTC()

    settime()

    switch = Switch(config.switch)

    myalarm = Alarm(config.alarm_timeout_min * 60,
                    config.motor, config.speaker, switch)
    
    _thread.start_new_thread(config.motor.motor_thread, ())

    display_manager = mode.DisplayManager()
    home = Home(display_manager, myalarm, aliases.home)
    alarm = SetAlarm(display_manager, myalarm, aliases.set_alarm)
    off = DisplayOff(display_manager, aliases.display_off)
    message_reader = MessageViewer(
        display_manager, home, aliases.message_reader)
    display_manager.display_states = [home, alarm, off, message_reader]
    display_manager.set_active_state(aliases.home)

    prev_dur = 0
    lock_ntptime = False
    config.display.set_contrast(0)

    now = rtc.datetime()
    myalarm.hour = now[4]
    myalarm.minute = now[5]
    while True:
        start = time.ticks_ms()
        display_manager.run_current_state()
        now = rtc.datetime()

        # webserver
        check = webserver.web_server(s, clients)
        if check is not None:
            print(check)
            if check[0] == 'motd':
                home.new_motds.append(check[1])
            elif check[0] == 'alarm_msg' and check[1] == 'random':
                with open('alarm.json', 'r') as f:
                    data = json.load(f)

                data['alarm_message'] = motd_parser.select_random_motd(motds)[
                    'motd']

                with open('alarm.json', 'w') as f:
                    json.dump([data], f)

        # handle alarm
        myalarm.update(now, home)

        # debug stuff
        dur = display_manager.display_timer.get_remaining()
        done = display_manager.display_timer.finished()
        cycle_time = time.ticks_diff(time.ticks_ms(), start)
        #print(dur, done, cycle_time)

        # ntp
        hour = now[4]
        minute = now[5]
        if hour == 2 + 12 and minute == 5 and not lock_ntptime:
            lock_ntptime = True
            print("setting time via ntp...")
            settime()

        elif minute != 5:
            lock_ntptime = False
    

except Exception as e:
    config.speaker.cleanup()
    config.motor.stop()
    import sys
    sys.print_exception(e)
    print("there was an error")
    failicon = bytearray([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x60, 0x60, 0x44, 0x4c, 0x48, 0x48, 0xe8, 0x60, 0x4c, 0x4c, 0x44, 0x4c,
                          0x08, 0x00, 0x00, 0x08, 0x4c, 0x44, 0x4c, 0x48, 0xc8, 0x40, 0x6c, 0xce, 0x0c, 0x0c, 0x40, 0xc0,
                          0x0c, 0x08, 0x00, 0x40, 0x44, 0x4c, 0xc8, 0xc8, 0x60, 0x60, 0xc0, 0x84, 0x0c, 0x0c, 0x00, 0x40,
                          0x40, 0xc0, 0x4c, 0x44, 0xc4, 0x0c, 0x08, 0x40, 0xc0, 0x0c, 0x08, 0x48, 0xc0, 0xc0, 0x40, 0xc4,
                          0x8c, 0xcc, 0xcc, 0x00, 0x00, 0x00, 0xfe, 0x72, 0xf2, 0xae, 0xf6, 0x36, 0x3a, 0xfe, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x30,
                          0x30, 0x00, 0x00, 0xc0, 0x50, 0x50, 0xe0, 0x00, 0x10, 0xe0, 0x00, 0xc0, 0x50, 0x50, 0xe0, 0x00,
                          0xf0, 0x00, 0xe0, 0x10, 0x10, 0xfc, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0x00, 0xf0, 0x00, 0xe0,
                          0x10, 0x10, 0x10, 0xe0, 0x00, 0x20, 0x10, 0x10, 0x10, 0x10, 0xe0, 0x00, 0x00, 0x00, 0x30, 0x30,
                          0x80, 0x40, 0x20, 0x10, 0x00, 0xe0, 0x11, 0x11, 0xe1, 0x01, 0x11, 0x91, 0x51, 0x31, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x80, 0x00, 0x00,
                          0x00, 0x80, 0x00, 0x80, 0x80, 0x80, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x00,
                          0x00, 0x80, 0x80, 0x00, 0x01, 0x01, 0x80, 0x00, 0x01, 0x03, 0x00, 0x80, 0x81, 0x81, 0x00, 0x00,
                          0x87, 0x00, 0x00, 0x01, 0x01, 0x01, 0x80, 0x80, 0x81, 0x01, 0x81, 0x81, 0x81, 0x01, 0x00, 0x00,
                          0x81, 0x81, 0x01, 0x00, 0x00, 0x82, 0x84, 0x04, 0x04, 0x84, 0x03, 0x00, 0x80, 0x00, 0x02, 0x01,
                          0x80, 0x80, 0x83, 0x03, 0x00, 0x83, 0x04, 0x04, 0x83, 0x00, 0x83, 0x84, 0x84, 0x02, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x1f, 0xc0,
                          0x08, 0x0f, 0x00, 0x07, 0x0a, 0x0a, 0x01, 0x00, 0x08, 0x1f, 0x00, 0x09, 0x0a, 0x0a, 0x04, 0x00,
                          0x06, 0x0a, 0x0a, 0x07, 0x00, 0x08, 0x0f, 0x00, 0x00, 0x00, 0x07, 0x08, 0x08, 0x08, 0x07, 0x00,
                          0x08, 0x1f, 0x00, 0x00, 0x00, 0x09, 0x0a, 0x0a, 0x04, 0x00, 0x3f, 0x08, 0x08, 0x07, 0x00, 0x06,
                          0x0a, 0x0a, 0x07, 0x00, 0x06, 0x0a, 0x0a, 0x07, 0x00, 0x07, 0x08, 0x08, 0x0f, 0x00, 0x00, 0x00,
                          0x3f, 0x08, 0x08, 0x07, 0x00, 0x07, 0x08, 0x08, 0x0f, 0x00, 0x07, 0x0a, 0x0a, 0x01, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
                          0x10, 0x10, 0x1f, 0x10, 0x10, 0x1f, 0x00, 0x0c, 0x15, 0x15, 0x0e, 0x00, 0x7f, 0x00, 0x0e, 0x11,
                          0x11, 0x7f, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e, 0x00, 0x10, 0x1f, 0x00, 0x0e, 0x11, 0x11, 0x1f,
                          0x00, 0x00, 0x00, 0x0f, 0x15, 0x15, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e, 0x00,
                          0x11, 0x3e, 0x00, 0x0f, 0x10, 0x10, 0x1f, 0x00, 0x5f, 0x00, 0x00, 0x00, 0x0f, 0x10, 0x10, 0x1f,
                          0x00, 0x0f, 0x15, 0x15, 0x02, 0x00, 0x10, 0x1f, 0x00, 0x00, 0x00, 0x22, 0x41, 0x41, 0x41, 0x41,
                          0x3e, 0x00, 0x30, 0x48, 0x48, 0x48, 0x48, 0x7f, 0x00, 0x00, 0x00, 0x10, 0x1f, 0x00, 0x1f, 0x01,
                          0x01, 0x1e, 0x00, 0x0e, 0x11, 0x11, 0x11, 0x0e, 0x00, 0x60, 0x10, 0x0f, 0x10, 0x60, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x02, 0x06, 0x3e, 0xfc, 0xf0, 0xc0, 0x00, 0x00, 0x00, 0x70, 0x70, 0x70, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x80, 0xf0, 0x7f, 0x3f, 0x0f, 0x00, 0x00, 0x00, 0x38, 0x38, 0x38, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                          0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00])
    icon = framebuf.FrameBuffer(failicon, 128, 64, framebuf.MONO_VLSB)
    display.draw_sprite(icon, x=0, y=0, w=128, h=64)
    display.present()
    timer = Neotimer(config.bsod_timeout_s * 1000)
    timer.start()
    from utime import sleep_ms  # type: ignore
    while not timer.finished():
        sleep_ms(100)

finally:
    print("doing cleanup")
    config.speaker.cleanup()
    display.cleanup()
    config.motor.stop()
    print("cleanup success!")
